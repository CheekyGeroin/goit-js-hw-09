{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,qBAC9BE,KAAMH,SAASC,cAAc,oBAC7BG,OAAQJ,SAASC,cAAc,uBAyBjC,SAASI,EAAcC,EAAUJ,GAC/B,MAAMK,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,uBAAqBL,QAAiBJ,OAE5CU,EAAK,sBAAoBN,QAAeJ,SAE3CA,MA/BPJ,EAAKC,KAAKe,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBACF,MAAMZ,EAASN,EAAKM,OAAOa,MACrBf,EAAQJ,EAAKI,MAAMe,MACnBd,EAAOL,EAAKK,KAAKc,MACvB,IAAK,IAAIC,EAAI,EAAGA,GAAKd,EAAQc,GAAK,EAChCL,YAAW,KAETR,EADiBa,EACOhB,GACrBiB,MAAKF,IACJG,EAAAxB,GAASyB,OAAOC,QAAQ,GAAGL,QAE5BM,OAAMC,IACLJ,EAAAxB,GAASyB,OAAOI,QAAQ,GAAGD,UAE9BN,EAAIf,GAETY,EAAEW,OAAOC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=delay]'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n};\n\nrefs.form.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  const amount = refs.amount.value;\n  const delay = refs.delay.value;\n  const step = refs.step.value;\n  for (let i = 1; i <= amount; i += 1) {\n    setTimeout(() => {\n      const position = i;\n      createPromise(position, delay)\n        .then(value => {\n          Notiflix.Notify.success(`${value}`);\n        })\n        .catch(error => {\n          Notiflix.Notify.failure(`${error}`);\n        });\n    }, i * step);\n  }\n  e.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","value","i","then","$parcel$interopDefault","Notify","success","catch","error","failure","target","reset"],"version":3,"file":"03-promises.7309dd88.js.map"}